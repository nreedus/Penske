library(dplyr)
library(hflights)
data("hflights")
head(hflights)
flights <- tbl_df(hflights)
flights
library(dplyr)
library(hflights)
head(hflights)
flights <-tbl_df(hflights)
select(flights, ArrTime, Origin, DepTime)
flights %>% select(UniqueCarrier, DepDelay) %>% filter(DepDelay > 60)
flights %>% select(UniqueCarrier, DepDelay) %>% arrange(desc(DepDelay))
flights %>% select(Distance, AirTime) %>% mutate(Speed = Distance/AirTime*60)
flights %>% group_by(Dest) %>% summarise(avg_delay = mean(ArrDelay, na.rm=TRUE))
flights %>% group_by(UniqueCarrier) %>% summarise_each(funs(mean), Cancelled, Diverted)
flights %>% group_by(UniqueCarrier) %>% summarise_each(funs(min(., na.rm=TRUE), max(., na.rm=TRUE)), matches("Delay"))
flights %>% group_by(Month, DayofMonth) %>% summarise(flight_count = n()) %>% arrange(desc(flight_count))
flights %>% group_by(Month, DayofMonth) %>% tally(sort = TRUE)
flights %>% group_by(Dest) %>% summarise(flight_count = n(), plane_count = n_distinct(TailNum))
flights %>% group_by(Dest) %>% select(Cancelled) %>% table() %>% head()
load("~/R/Projects/Project 1 Basic Data Manipulation/.RData")
View(refine_original)
refine_original$company[refine_original$company=="Phillips"] <- "philips"
refine_original$company[refine_original$company=="phillips"] <- "philips"
refine_original$company[refine_original$company=="phllips"] <- "philips"
refine_original$company[refine_original$company=="akz0"] <- "akzo"
refine_original$company[refine_original$company=="ak zo"] <- "akzo"
refine_original$company[refine_original$company=="fillips"] <- "philips"
refine_original$company[refine_original$company=="phlips"] <- "philips"
refine_original$company[refine_original$company=="unilver"] <- "unilever"
refine_original %>% mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- refine_original %>% mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- refine_original mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- refine_original %>% mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- refine_original (mutate("product_category" = ifelse(product_code == "p", "Smartphone", "")))
refine_original <- refine_original, mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- refine_original <- mutate("product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- mutate(refine_original "product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", ""))
library(dplyr)
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- mutate(refine_original, "product catagory" = ifelse(product_code == "v", "TV", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "x", "Laptop", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "q", "Tablet", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "x", "Laptop", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", "")) %>% mutate(refine_original, "product_category" = ifelse(product_code == "x", "Laptop", "")) %>% mutate(refine_original, "product_category" = ifelse(product_code == "q", "Tablet", "")) %>% mutate(refine_original, "product catagory" = ifelse(product_code == "v", "TV", "")) %>% mutate(refine_original, "product catagory" = ifelse(product_code == "v", "TV", ""))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", "")) %>% mutate("product_category" = ifelse(product_code == "x", "Laptop", product_category)) %>% mutate("product_category" = ifelse(product_code == "q", "Tablet", product_category)) %>% mutate("product catagory" = ifelse(product_code == "v", "TV", product_category)) %>% mutate("product catagory" = ifelse(product_code == "v", "TV", product_category))
refine_original <-mutate(refine_original, company_philips = ifelse(company =="philips", 1, 0)) %>%
mutate(company_akzo = ifelse(company == "akzo", 1, 0)) %>%
mutate(company_van_houten = ifelse(company == "van_houten", 1, 0)) %>%
mutate(company_unilever = ifelse(company == "unilever", 1, 0))
refine_original <- mutate(refine_original, product_smartphone = ifelse(product_category == "Smartphone", 1, 0)) %>%
mutate(product_TV = ifelse(product_category == "TV", 1, 0)) %>%
mutate(product_laptop = ifelse(product_category == "Laptop", 1, 0)) %>%
mutate(product_tablet = ifelse(product_category == "Tablet", 1, 0))
refine_original$`product catagory` <-NULL
refine_original$`product category` <-NULL
refine_original$`product_category` <-NULL
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", "")) %>% mutate("product_category" = ifelse(product_code == "x", "Laptop", product_category)) %>% mutate("product_category" = ifelse(product_code == "q", "Tablet", product_category)) %>% mutate("product category" = ifelse(product_code == "v", "TV", product_category)) %>% mutate("product category" = ifelse(product_code == "v", "TV", product_category))
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", "")) %>% mutate("product_category" = ifelse(product_code == "x", "Laptop", product_category)) %>% mutate("product_category" = ifelse(product_code == "q", "Tablet", product_category)) %>% mutate("product category" = ifelse(product_code == "v", "TV", product_category))
refine_original$`product catagory` <-NULL
refine_original$`product_category` <-NULL
refine_original$`product category` <-NULL
refine_original <- mutate(refine_original, "product_category" = ifelse(product_code == "p", "Smartphone", "")) %>% mutate("product_category" = ifelse(product_code == "x", "Laptop", product_category)) %>% mutate("product_category" = ifelse(product_code == "q", "Tablet", product_category)) %>% mutate("product category" = ifelse(product_code == "v", "TV", product_category))
refine_original$`product_category` <-NULL
colnames(refine_original)
colnames(refine_original) [-1]
colnames(refine_original)[-1]
colnames(refine_original)[-12]
colnames(refine_original)[12]
colnames(refine_original)[14]
colnames(refine_original)[14] <-"product_category"
write.csv(refine_original, "refine_clean.csv")
getwd
getwd()
write.csv(refine_original, file="refine_clean.csv")
getwd()
library(dplyr)
library(hflights)
flights <- tbl_df(hflights)
head
head(flights)
x <- rnorm(100, mean=.5, sd=.3)
hist(x, axes = FALSE, ylab="")
axis(4)
axis(1)
run set.seed(1234)
set.seed(1234)
x <- rnorm(100, mean=.5, sd=.3)
mean(x)
sd(x)
set.seed(1)
x <- rnorm(100)
head(x)
internal(tail)
help(tail)
?"tail"
x <- 5 : 6
x
x <- 5 + 6
y <- x + 3
z <- y - 10
z
?ls
?lm
?list
?lst
?ls
?list
?lst
?ls
?lm
?list
A <- c(1,3,5,7,9)
A
B <- mean(A)
B
x<- c(2,4,6,8,10)
Z <- (A+X)
X<- c(2,4,6,8,10)
Z <- (A+X)
X<- c(2,4,6,8,10)
Z <- (A+X)
Z
paste(”R session”, 1)
paste(R session, 1)
?paste
paste c("R session", 1)
paste("R session", 1)
head(R session 1)
head("R session" 1)
head("R session", 1)
dim("R session", 1)
read("R session", 1)
ls("R session", 1)
summary("R session", 1)
my.standard<-function(x){(x-mean(x))/sd(x)}
my.standard()
my.standard
my.standard(1)
y <- c(1, 2, 3.14, 4, 5)
y
z <- c(FALSE, TRUE, 2, 3, 4)
z
matrix(c(5,4,3,2,1,0)+2,nrow=2)<5
?pi
a <- 3
b <- 4
myfunc <- function(x,y){
a <- x+y
b <- x-y
return(a*b)
}
return(a*b)
?parameter
??parameter
a <- 7
b <- 5
x=3
y=4
myfunc <- function(x,y){
a <- x+y
b <- x-y
return(a*b)
}
return(a*b)
myfunc
7*-1
plot(tmp$W, tmp$fracPO, pch = 21, col = "red2", bg = "orange",
xlab = "Wins", ylab = "Making the NBA Playoffs", main = "NBA Playoff Appearance / Regular Season Wins")
abline(h = 0.9, lty = 3, col = "red2")
abline(v = 35, lty = 3, col = "blue2")
abline(v = 45, lty = 3, col = "blue2")
library(dplyr)
library(magrittr)
library(ggplot2)
NBA_train <- read.csv("C:/Users/narce/OneDrive/Documents/GitHub/NBA/NBA/NBA_train.csv")
NBA <-NBA_train
tmp<- group_by(NBA, W) %>% summarise(nTot = n(), nPO = sum(Playoffs), fracPO = nPO/nTot)
View(tmp)
plot(tmp$W, tmp$fracPO, pch = 21, col = "red2", bg = "orange",
xlab = "Wins", ylab = "Making the NBA Playoffs", main = "NBA Playoff Appearance / Regular Season Wins")
abline(h = 0.9, lty = 3, col = "red2")
abline(v = 35, lty = 3, col = "blue2")
abline(v = 45, lty = 3, col = "blue2")
library(tm)
library(wordcloud)
opinion.lexicon.pos <- scan("positive-words.txt", what="character", comment.char = ";")
opinion.lexicon.neg <- scan("negative-words.txt", what="character", momment.char = ";")
setwd("C:/Users/narce/OneDrive/Documents/GitHub/Penske/Penske")
opinion.lexicon.pos <- scan("positive-words.txt", what="character", comment.char = ";")
opinion.lexicon.neg <- scan("negative-words.txt", what="character", momment.char = ";")
opinion.lexicon.neg <- scan("negative-words.txt", what="character", comment.char = ";")
folder <- "C:/Users/narce/OneDrive/Documents/GitHub/Penske/Penske/corpus"
filelist <- list.files(path=folder, pattern="*.txt")
filelist <-paste(folder, "\\", filelist, sep="")
lapply(filelist, FUN=readLines)
filelistA <- lapply(filelist, FUN=readLines)
corpus <-lapply(filelistA, FUN = paste, collapse=" ")
corpus
corpus2 <- gsub(pattern = "\\W", replace=" ", corpus)
corpus2 <- gsub(pattern = "\\d", replacement = " ", corpus2)
corpus2<-tolower(corpus2)
corpus2 < gsub(pattern = "\\b[A-z]\\b{1}", replace=" ", corpus2)
wordcloud(corpus2, colors = rainbow(3))
corpus3 <- Corpus(VectorSource(corpus2))
corpus3
tdm <- TermDocumentMatrix(corpus3)
tdm
as.matrix(tdm)
viewmatrix <- as.matrix(tdm)
colnames(viewmatrix) <- c("Read1", "Malb", "Read2", "Baker")
viewmatrix
comparison.cloud(viewmatrix)
save.image("C:/Users/narce/OneDrive/Documents/GitHub/Penske/Penske.Rproj.RData")
library(stringr)
corpus4 <- str_split(corpus3, pattern = "\\s+")
corpus4
lapply(corpus4, function(x) { sum(!is.na(match(x, opinion.lexicon.pos)))})
corpus3
corpus4
summary(corpus4)
summary(corpus3)
corpus4 <- str_split(corpus3, pattern="\\s+")
corpus4
View(corpus3)
class(corpus3)
corpus4 <- str_split(viewmatrix, pattern="\\s+")
corpus4
summary(corpus4)
lapply(corpus4, function(x) { sum(!is.na(match(x, opinion.lexicon.pos)))})
summary(corpus4)
View(corpus3)
class(corpus3)
corpus4 <- str_split(corpus3, pattern="\\s+")
corpus4
lapply(corpus4, function(x) { sum(!is.na(match(x, opinion.lexicon.pos)))})
summary(corpus3)
corpus3 <- Corpus(VectorSource(corpus2))
summary(corpus3)
tdm <- TermDocumentMatrix(corpus3)
tdm
corpus4 <- str_split(corpus2, pattern="\\s+")
corpus4
lapply(corpus4, function(x) { sum(!is.na(match(x, opinion.lexicon.pos)))})
summary(corpus4)
lapply(corpus4, function(x) { sum(!is.na(match(x, opinion.lexicon.pos)))})
lapply(corpus4, function(x) { sum(!is.na(match(x, opinion.lexicon.neg)))})
lapply(corpus4, function(x) { sum(!is.na(match(x, opinion.lexicon.pos))) - sum(!is.na(match(x, opinion.lexicon.neg)))})
scores <-unlist(lapply(corpus4, function(x) { sum(!is.na(match(x, opinion.lexicon.pos))) - sum(!is.na(match(x, opinion.lexicon.neg)))}))
scores
plot(scores)
summary(corpus4)
View(corpus4)
class(corpus4)
corpus5 <-as.matrix(corpus4)
View(corpus5)
summary(corpus2)
View(corpus2)
mean(scores)
hist(scores)
corpus
corpus2
corpus2 <- gsub(pattern = "\\W", replace=" ", corpus)
corpus2 <- gsub(pattern = "\\d", replacement = " ", corpus2)
corpus2<-tolower(corpus2)
corpus2 <- removeWords(corpus2, stopwords("english"))
corpus2 < gsub(pattern = "\\b[A-z]\\b{1}", replace=" ", corpus2)
corpus2 <- stripWhitespace(corpus2)
wordcloud(corpus2, colors = rainbow(3))
corpus2
View(corpus2)
corpus3 <- Corpus(VectorSource(corpus2))
summary(corpus3)
tdm <- TermDocumentMatrix(corpus3)
tdm
as.matrix(tdm)
viewmatrix <- as.matrix(tdm)
colnames(viewmatrix) <- c("Read1", "Malb", "Read2", "Baker")
viewmatrix
comparison.cloud(viewmatrix)
?sort
sort(viewmatrix, decreasing = TRUE)
corpus_sort<-sort(viewmatrix, decreasing = TRUE)
View(corpus_sort)
corpus3
View(corpus2)
viewmatrix
corpus_sort<-sort(viewmatrix, c())
corpus_sort<-sort(viewmatrix, decreasing=TRUE, c())
View(corpus_sort)
corpus_sort<-read.table(viewmatrix)
corpus_sort<-(viewmatrix)
corpus_sort[order(c(Read1, Malb, Read2, Baker))]
corpus_sort[order(c[Read1, Malb, Read2, Baker])]
View(corpus_sort)
sort(corpus_sort, decreasing = TRUE)
corpus_sort1 <-sort(corpus_sort, decreasing = TRUE)
View(corpus_sort1)
View(corpus_sort)
corpus_sort<-(viewmatrix)
View(corpus_sort)
corpus_sort <- read.table
View(corpus_sort)
View(corpus_sort)
corpus_sort1 <-sort(corpus_sort, decreasing = TRUE)
corpus_sort <- read.table
View(corpus_sort)
corpus_sort<-(viewmatrix)
View(corpus_sort)
corpus_sort1 <-sort(corpus_sort, c[1:4])
corpus_sort1 <-sort(corpus_sort, c(1:4))
corpus_sort1 <-sort(corpus_sort, c(1:4), decreasing = TRUE)
View(corpus_sort1)
corpus_sort1 <-sort(corpus_sort, c(1:4), decreasing = TRUE)
View(corpus_sort1)
corpus_sort1 <- read.table
View(corpus_sort1)
corpus_sort1 <-sort(corpus_sort, c(1:4), decreasing = TRUE)
View(corpus_sort1)
corpus_sort<-(viewmatrix)
colnames(viewmatrix) <- c("Read1", "Malb", "Read2", "Baker")
corpus_sort<-(viewmatrix)
corpus_sort[order(c(Read1, Malb, Read2, Baker))]
corpus_sort[order(c("Read1", "Malb", "Read2", "Baker"))]
View(corpus_sort)
knitr::opts_chunk$set(echo = TRUE)
library(tm)
library(wordcloud)
library(stringr)
library(tm)
library(wordcloud)
library(stringr)
library(tm)
library(wordcloud)
library(stringr)
folder <- "C:/Users/narce/OneDrive/Documents/GitHub/Penske/Penske/corpus"
list.files(path=folder, pattern="*.txt")
folder <- "C:/Users/narce/OneDrive/Documents/GitHub/Penske/Penske/corpus"
filelist <-paste(folder, "\\", folder, sep="")
filelist
str(filelist)
filelist
filelist <-folder
filelist <-paste(filelist, "\\", filelist, sep="")
filelist
filelist <- list.files(path=folder, pattern="*.txt")
filelist
str(filelist)
filelist
filelist
filelist <-paste(folder, "\\", filelist, sep="")
filelist
filelist <-paste(folder, "\\", filelist, sep="")
filelist <-paste(folder, "\\", filelist, sep="")
filelist
filelist <-paste(folder, "\\", filelist, sep="")
filelist
lapply(filelist, FUN=readLines)
lapply(filelist, FUN=readLines)
folder <- "C:/Users/narce/OneDrive/Documents/GitHub/Penske/Penske/corpus"
lapply(filelist, FUN=readLines)
setwd("C:/Users/narce/OneDrive/Documents/GitHub/Penske/Penske")
lapply(filelist, FUN=readLines)
folder <- "C:/Users/narce/OneDrive/Documents/GitHub/Penske/Penske/corpus"
list.files(path=folder, pattern="*.txt")
filelist <- list.files(path=folder, pattern="*.txt")
filelist <-paste(folder, "\\", filelist, sep="")
lapply(filelist, FUN=readLines)
list.files(path=folder, pattern="*.txt")
filelist <-paste(folder, "\\", filelist, sep="")
filelist
lapply(filelist, FUN=readLines)
folder <- "C:/Users/narce/OneDrive/Documents/GitHub/Penske/Penske/corpus"
folder <- "C:/Users/narce/OneDrive/Documents/GitHub/Penske/Penske/corpus"
list.files(path=folder, pattern="*.txt")
list.files(path=folder, pattern="*.txt")
# Create character vector of the four file names
filelist <- list.files(path=folder, pattern="*.txt")
filelist
str(filelist)
filelist <- list.files(path=folder, pattern="*.txt")
filelist
str(filelist)
filelist <-paste(folder, "\\", filelist, sep="")
filelist <-paste(folder, "\\", filelist, sep="")
filelist
lapply(filelist, FUN=readLines)
folder <- "C:/Users/narce/OneDrive/Documents/GitHub/Penske/Penske/corpus"
list.files(path=folder, pattern="*.txt")
library(tm)
library(wordcloud)
library(stringr)
library(tm)
library(wordcloud)
library(stringr)
